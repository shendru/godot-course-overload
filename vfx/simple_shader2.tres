[gd_resource type="VisualShader" load_steps=12 format=3 uid="uid://ctrwuf8le1hhv"]

[sub_resource type="VisualShaderNodeVec2Parameter" id="VisualShaderNodeVec2Parameter_v4jjp"]
parameter_name = "Texture_Scale"
default_value_enabled = true
default_value = Vector2(1, 1)

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_tkf4s"]
parameter_name = "Alpha_treshold"
hint = 1

[sub_resource type="VisualShaderNodeCompare" id="VisualShaderNodeCompare_r8uib"]
function = 2

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_7wn4p"]
expanded_output_ports = [0]
input_name = "color"

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_jk8nd"]
parameter_name = "hit_texture"

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_jlheq"]
source = 5

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_cs8xi"]
operator = 2

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_5sudl"]
parameter_name = "Dissolver_texture"
texture_type = 1

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_esjv1"]
expanded_output_ports = [0]
source = 5

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_cw8u3"]
operator = 2

[sub_resource type="VisualShaderNodeUVFunc" id="VisualShaderNodeUVFunc_paili"]
function = 1

[resource]
code = "shader_type canvas_item;
render_mode blend_mix;

uniform vec2 Texture_Scale = vec2(1.000000, 1.000000);
uniform sampler2D Dissolver_texture : source_color;
uniform float Alpha_treshold : hint_range(0.0, 1.0);
uniform sampler2D hit_texture;



void fragment() {
// Vector2Parameter:10
	vec2 n_out10p0 = Texture_Scale;


// UVFunc:9
	vec2 n_in9p2 = vec2(0.00000, 0.00000);
	vec2 n_out9p0 = (UV - n_in9p2) * n_out10p0 + n_in9p2;


	vec4 n_out7p0;
// Texture2D:7
	n_out7p0 = texture(Dissolver_texture, n_out9p0);
	float n_out7p1 = n_out7p0.r;


// FloatParameter:11
	float n_out11p0 = Alpha_treshold;


// Compare:12
	bool n_out12p0 = n_out7p1 > n_out11p0;


// Input:2
	vec4 n_out2p0 = COLOR;
	float n_out2p1 = n_out2p0.r;


	vec4 n_out4p0;
// Texture2D:4
	n_out4p0 = texture(hit_texture, UV);


// FloatOp:5
	float n_out5p0 = n_out2p1 * n_out4p0.x;


// FloatOp:8
	float n_out8p0 = (n_out12p0 ? 1.0 : 0.0) * n_out5p0;


// Output:0
	COLOR.a = n_out8p0;


}
"
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2(1240, 340)
nodes/fragment/2/node = SubResource("VisualShaderNodeInput_7wn4p")
nodes/fragment/2/position = Vector2(-420, 620)
nodes/fragment/3/node = SubResource("VisualShaderNodeTexture2DParameter_jk8nd")
nodes/fragment/3/position = Vector2(-560, 960)
nodes/fragment/4/node = SubResource("VisualShaderNodeTexture_jlheq")
nodes/fragment/4/position = Vector2(-220, 980)
nodes/fragment/5/node = SubResource("VisualShaderNodeFloatOp_cs8xi")
nodes/fragment/5/position = Vector2(160, 900)
nodes/fragment/6/node = SubResource("VisualShaderNodeTexture2DParameter_5sudl")
nodes/fragment/6/position = Vector2(-200, 20)
nodes/fragment/7/node = SubResource("VisualShaderNodeTexture_esjv1")
nodes/fragment/7/position = Vector2(240, -40)
nodes/fragment/8/node = SubResource("VisualShaderNodeFloatOp_cw8u3")
nodes/fragment/8/position = Vector2(860, 80)
nodes/fragment/9/node = SubResource("VisualShaderNodeUVFunc_paili")
nodes/fragment/9/position = Vector2(-60, -240)
nodes/fragment/10/node = SubResource("VisualShaderNodeVec2Parameter_v4jjp")
nodes/fragment/10/position = Vector2(-420, -240)
nodes/fragment/11/node = SubResource("VisualShaderNodeFloatParameter_tkf4s")
nodes/fragment/11/position = Vector2(260, -320)
nodes/fragment/12/node = SubResource("VisualShaderNodeCompare_r8uib")
nodes/fragment/12/position = Vector2(600, -200)
nodes/fragment/connections = PackedInt32Array(3, 0, 4, 2, 4, 0, 5, 1, 2, 1, 5, 0, 6, 0, 7, 2, 5, 0, 8, 1, 8, 0, 0, 1, 9, 0, 7, 0, 10, 0, 9, 1, 7, 1, 12, 0, 11, 0, 12, 1, 12, 0, 8, 0)
