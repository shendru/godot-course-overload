[gd_scene load_steps=7 format=3 uid="uid://dxrjgx5aj8m3q"]

[ext_resource type="Texture2D" uid="uid://b4y7ey2akqxvw" path="res://assets/items/coffee.jpg" id="1_y8s32"]
[ext_resource type="Texture2D" uid="uid://dmo0rkd13p8i5" path="res://icon.svg" id="2_4vmht"]

[sub_resource type="Shader" id="Shader_l4vqn"]
code = "shader_type canvas_item;
uniform sampler2D SCREEN_TEXTURE: hint_screen_texture;
uniform sampler2D curve;

void fragment() {
	vec2 vecToCenter = vec2(0.5, 0.5) - UV;
	float distToCenter = length(vecToCenter);
	float curveVal = texture(curve, vec2(distToCenter)).r;
	vec2 diff = normalize(vecToCenter) * 0.6 * curveVal;
	COLOR = texture(SCREEN_TEXTURE, SCREEN_UV - diff);
}

//void light() {
//	// Called for every pixel for every light affecting the CanvasItem.
//	// Uncomment to replace the default light processing function with this one.
//}
"

[sub_resource type="Curve" id="Curve_y8s32"]
_limits = [-1.0, 1.0, 0.0, 1.0]
_data = [Vector2(0, 0.0337079), 0.0, 0.0, 0, 0, Vector2(0.115385, -0.438202), 0.0, 0.0, 0, 0, Vector2(0.254808, 0.662921), 0.0, 0.0, 0, 0, Vector2(0.375, 0.0561798), 0.0, 0.0, 0, 0]
point_count = 4

[sub_resource type="CurveTexture" id="CurveTexture_4vmht"]
width = 2056
texture_mode = 1
curve = SubResource("Curve_y8s32")

[sub_resource type="ShaderMaterial" id="ShaderMaterial_plcx1"]
shader = SubResource("Shader_l4vqn")
shader_parameter/curve = SubResource("CurveTexture_4vmht")

[node name="Sprite2D" type="Sprite2D"]
texture = ExtResource("1_y8s32")

[node name="Sprite2D" type="Sprite2D" parent="."]
material = SubResource("ShaderMaterial_plcx1")
position = Vector2(-84, -69)
texture = ExtResource("2_4vmht")

[node name="Camera2D" type="Camera2D" parent="."]
